var courses = {};

function toObjectList(title, ary) {
    var obj = []
    for (var i = 0; i < ary.length; i++) {
        var o = {}
        o[title] = ary[i];
        obj.push(o);
    }
    return obj;
}

// add course
function a(title, provider, topics, platform, format, prerequisites, certificate, description, url, logo) {
    var tags = [{ "provider": provider },
                { "platform": platform },
                { "certificate": certificate }];
    tags = tags.concat(toObjectList("topic", topics));
    tags = tags.concat(toObjectList("format", format));
    tags = tags.concat(toObjectList("prerequisites", prerequisites));
    
    var course = {
		"title": title,
		"provider": provider,
		"tags":tags,
		"description": description,
		"url": url,
		"logo": logo,
        "requirements": prerequisites || prerequisites.split(',')
	};
    var key = title.replace(/ /g,'');
	courses[key] = course;
}

// Udacity
a("Introduction to Computer Science", "Udacity", ["Computer Science"], "Udacity", ["Modules"], [], "Yes", "In this course you will learn key concepts in computer science and learn how to write your own computer programs in the context of building a web crawler.", "http://www.udacity.com/overview/Course/cs101/CourseRev/apr2012, ", "http://lh4.ggpht.com/NmHgq22XI-4hx0OwvnB3pljTTTqM-D-vUzK-w1araZg4lmziVamkX-Lr4Sq4SQ35bEnKNxh331BWHSfZHkkw");
a("Design of Computer Programs", "Udacity", ["Computer Science"], "Udacity", ["Modules"], [], "Yes", "Learn new concepts, patterns, and methods that will expand your programming abilities, helping move you from a novice to an expert programmer.", "http://www.udacity.com/overview/Course/cs212/CourseRev/apr2012, ", "http://lh6.ggpht.com/DwG6Oe7gOPCZsLGCyWGBFl9rKGjgbq4_g1UzUj6YpmrV9Y9MGU6uvsKY_FDVaZ22RLk1wyHsvqJ7TkAu-Q");
a("Algorithms", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected.", "http://www.udacity.com/overview/Course/cs215/CourseRev/1, ", "http://lh3.ggpht.com/iDD5AbYQX0US4VM0yPmRXOEyzdm2L8Gm1lABA1GfIpMnuiEU9V5_Ld_L7LkrJnQiyaIDbvP9zNaijS3VvsOT");
a("Differential Equations in Action", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "In this course you will examine real world problems -- rescue the Apollo 13 astronauts, stop the spread of epidemics, and fight forest fires -- involving differential equations and figure out how to solve them using numerical methods.", "http://www.udacity.com/overview/Course/cs222/CourseRev/1", "http://lh4.ggpht.com/ptQEvBdWbWyz5jrJxfWcClzobyZiG8hjGXiV__4CZs_7IzMs4gapQT88zo3ElZrSARHPO_B9r-KiVoauGg4");
a("Web Development", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "Starting from the basics of how the web works, this class will walk you through everything you need to know to build your own blog application and scale it to support large numbers of users.", "http://www.udacity.com/overview/Course/cs253/CourseRev/apr2012, ", "http://lh3.ggpht.com/_KfXMQlaM0fNl4cRzOeh8RiNdvEwgEwx3ZW4tryBUypXXUI2r4_SSbwPFjM70NGUB2L-n2TY1x-qmBikCQ");
a("HTML5 Game Development", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.", "http://www.udacity.com/overview/Course/cs255/CourseRev/1, ", "http://lh4.ggpht.com/GGnsgjRU8TAFiLQPe4NIyV027aalomZIpMGbwgmHGJqW5ofxA4SoymUjPqm3ec0RDHh8vgLZU059GaDzEMA");
a("Software Testing", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.", "http://www.udacity.com/overview/Course/cs258/CourseRev/1, ", "http://lh6.ggpht.com/f3qmXpTWYoxLdzJhd0ohQbzBZOvHQpstHyc9-OTRkw7ClihzvDjHMqRWc556AXkFdbsya5AOfnNcrJ57jFo");
a("Software Debugging", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.", "http://www.udacity.com/overview/Course/cs259/CourseRev/1, ", "http://lh5.ggpht.com/W3v7nm-iBAdNg0LGCweEVKUtT_nYHyUfPabDLPAUNO96Y1haoI_4X1TINz0z5dUMrb7u_gdcB4Jw3Y5LjFA");
a("Programming Languages", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures.", "http://www.udacity.com/overview/Course/cs262/CourseRev/apr2012, ", "http://lh3.ggpht.com/ODg_QbKR_sjKmqxRfU860rusnA5DLdFrXVpmiGhnpDUuHB7w9_7Ydb4wqz-TwYYEEOTl-vgKRWtV4a9RmnE");
a("Interactive Rendering", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.", "http://www.udacity.com/overview/Course/cs291/CourseRev/1, ", "http://lh4.ggpht.com/UN_yc-sc6av3HGDvUAdV5ZA6CbdNNJCMpshTuAIn_pD-05RQEYy7eIVLT54oGU7kvvl0DqmdjFqSp8pyr5Fj");
a("Introduction to Theoretical Computer Science", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.", "http://www.udacity.com/overview/Course/cs313/CourseRev/1, ", "http://lh5.ggpht.com/ShOKrooWpBfx7Xgz311RCVJnhp8OKRCd6lFXOe66JshUIns4z0L-bNlW1y7rFjDBQlN87Kzfx_qMC3cBLdY");
a("Introduction to Parallel Programming", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself.", "http://www.udacity.com/overview/Course/cs344/CourseRev/1, ", "http://lh3.ggpht.com/stTvQM_QXpp3EjVpE2ZdhVXgWoiBGIJXC3l9dgIEko_gdyd40CPAhOI6iC_22sB9RMK8_xnx4yDBT-m9Dbq2");
a("Functional Hardware Verification", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "When developing chips it is essential that they get verified thoroughly because it is very hard or impossible to fix them once they have been manufactured. In this class, you will learn how to program verification environments that verify chip functionality efficiently, as well as understand and leverage automation such as constrained random test generation and improve code reuse leveraging a standardized methodology.", "http://www.udacity.com/overview/Course/cs348/CourseRev/1, ", "http://lh5.ggpht.com/LcYB7ffOSO437RekuTI3Ow12GU1OtDObsXtf7kf4WPqomd6lwPSKdWH5_0Ysw0PRVhWe-dLZh0_pKAtrLqk");
a("Artificial Intelligence", "Udacity", ["Computer Science"], "Udacity", [], [], "Yes", "Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars.", "http://www.udacity.com/overview/Course/cs373/CourseRev/apr2012, ", "http://lh3.ggpht.com/38Q8ciw-5kOTu0LH5eXSMstvUUN2L5AXLIGp9UU1Mb7Jt9Cs2pmbp1RHImk3UQBO19EMhCumco1CR9l_nA");
a("Applied Cryptography", "Udacity", ["Computer Science", "Security"], "Udacity", [], [], "Yes", "Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.", "http://www.udacity.com/overview/Course/cs387/CourseRev/apr2012, ", "http://lh6.ggpht.com/nR8FQ_pMEj_4MCFG1knZgCSIfnTiDXNI4rsSaDIXZU-0tRI2ikOpILXG1ivcadj7GamLlqZTvMJa_PbRuzg7");
a("How to Build a Startup", "Udacity", ["Business"], "Udacity", [], [], "No", "Learn the key tools and steps to build a successful startup (or at least reduce the risk of failure). An introduction to the basics of Steve Blank's famous Customer Development process, where entrepreneurs \"get out of the building\" to gather massive amounts of customer and marketplace feedback, and then use that feedback to continuously iterate and evolve their startup business models, improving the chances of success at every step.", "http://www.udacity.com/overview/Course/ep245/CourseRev/1, ", "http://lh5.ggpht.com/BRkPByeFcmydSNrVrIQ1HUHS0XZrWUdRHtLHnNfSAsmHDkkg6afFBo6OvX5tZw10HkhURLYZiHjODQ4D6js");

// 
a("Linear and Discrete Optimization", "EPFL", ["Computer Science"], "Coursera", ["Modules"], ["Linear Algebra", "Programming"], "Yes", "The course is an introduction to linear and discrete optimization - an important part of computational mathematics with a wide range of applications in many areas of everyday life.", "https://www.coursera.org/course/linearopt","https://coursera-course-photos.s3.amazonaws.com/4e/c1b71842848763186f164486340b59/logo_big.png");
a("Coding the Matrix: Linear Algebra through Computer Science Applications", "Brown", ["Computer Science", "Linear Algebra"], "Coursera", ["Modules", "Interactive"], ["Programming", "Proofs"], "Yes", "Learn how to use the concepts and methods of linear algebra to think about computational problems arising in computer science. Coursework includes building on the concepts to write small programs and run them on real data.","https://www.coursera.org/course/matrix", "https://coursera-course-photos.s3.amazonaws.com/6c/ffdfc097878bc0f8115148d7ee6826/460_259_logo.jpg");
a("Algorithms, Part I",	"Princeton", ["Computer Science", "Algorithms"], "Coursera", ["Modules", "Interactive"], ["Java"], "Yes", "This course covers the essential information that every serious programmer needs to know about algorithms and data structures, with emphasis on applications and scientific performance analysis of Java implementations. Part I covers basic iterable data types, sorting, and searching algorithms.", "https://www.coursera.org/course/algs4partI", "https://s3.amazonaws.com/coursera/topics/algs4partI/large-icon.png");
a("Quantum Mechanics and Quantum Computation", "Berkeley", ["Computer Science", "Physics"], "Coursera",  ["Modules", "Interactive"], ["Linear Algebra", "Programming"], "Yes", "This is an introduction to quantum computation, a cutting edge field that tries to exploit the exponential power of computers based on quantum mechanics. The course does not assume any prior background in quantum mechanics, and can be viewed as a very simple and conceptual introduction to that field.", "https://www.coursera.org/course/qcomp", "https://s3.amazonaws.com/coursera/topics/qcomp/large-icon.png");
a("Algorithms, Part II", "Princeton", ["Computer Science", "Algorithms"] , "Coursera", ["Modules", "Interactive"], ["Java"], "Yes", "This course covers the essential information that every serious programmer needs to know about algorithms and data structures, with emphasis on applications and scientific performance analysis of Java implementations.", "https://www.coursera.org/course/algs4partII", "https://s3.amazonaws.com/coursera/topics/algs4partII/large-icon.png");
a("Functional Programming Principles in Scala", "EPFL", ["Computer Science", "Programming"], "Coursera", ["Modules", "Interactive"], ["C#", "Java", "Programming"],	"Yes", "This course introduces the cornerstones of functional programming using the Scala programming language. Functional programming has become more and more popular in recent years because it promotes code that’s safe, concise, and elegant. Furthermore, functional programming makes it easier to write parallel code for today’s and tomorrow’s multiprocessors by replacing mutable variables and loops with powerful ways to define and compose functions.", "https://www.coursera.org/course/progfun", "https://s3.amazonaws.com/coursera/topics/progfun/large-icon.png");
a("Scientific Computing", "University of Washington", ["Computer Science", "Data Anylasis"], "Coursera", ["Modules", "Interactive"], [], "Yes", "Investigate the flexibility and power of project-oriented computational analysis. Practice using this technique to resolve complicated problems in a range of fields including the physical and engineering sciences, finance and economics, medical, social and biological sciences. Enhance communication of information by creating visual representations of scientific data.", "https://www.coursera.org/course/scientificcomp", "https://s3.amazonaws.com/coursera/topics/scientificcomp/large-icon.png");
a("Learn to Program: The Fundamentals", "University of Toronto", ["Computer Science", "Programming"], "Coursera", ["Modules", "Interactive"], [], "Yes", "A computer program is a set of instructions for a computer to follow, just as a recipe is a set of instructions for a chef. Laptops, kitchen appliances, MP3 players, and many other electronic devices all run computer programs. Programs have been written to manipulate sound and video, write poetry, run banking systems, predict the weather, and analyze athletic performance. This course is intended for people who have never seen a computer program. It will give you a better understanding of how computer applications work and teach you how to write your own applications.", "https://www.coursera.org/course/programming1", "https://s3.amazonaws.com/coursera/topics/programming1/large-icon.png");
a("Introduction to Logic", "Stanford", ["Computer Science", "Logic"], "Coursera", ["Modules", "Interactive"], [], "Yes", "This course is a basic introduction to Logic. It shows how to formalize information in form of logical sentences. It shows how to reason systematically with this information to produce all logical conclusions and only logical conclusions. And it examines logic technology and its applications - in mathematics, science, engineering, business, law, and so forth.", "https://www.coursera.org/course/intrologic", "https://s3.amazonaws.com/coursera/topics/intrologic/large-icon.png");
a("Human-Computer Interaction", "Stanford", ["Computer Science", "Human-Computer Interaction"], "Coursera", ["Modules", "Interactive"], ["Programming"], "Yes", "In this course, you will learn how to design technologies that bring people joy, rather than frustration. You'll learn several techniques for rapidly prototyping and evaluating multiple interface alternatives -- and why rapid prototyping and comparative evaluation are essential to excellent interaction design. You'll learn how to conduct fieldwork with people to help you get design ideas. How to make paper prototypes and low-fidelity mock-ups that are interactive -- and how to use these designs to get feedback from other stakeholders like your teammates, clients, and users", "https://www.coursera.org/course/hci", "https://s3.amazonaws.com/coursera/topics/hci/large-icon.png");
a("Linear and Discrete Optimization", "EPFL", ["Computer Science", "Math"], "Coursera", ["Modules", "Interactive"], [], "Yes", "This course serves as an introduction to linear and discrete optimization from the viewpoint of a mathematician or computer scientist.  Besides learning how linear and discrete optimization can be applied, we focus on understanding methods that solve linear programs and discrete optimization problems in a mathematically rigorous way.", "https://www.coursera.org/course/linearopt", "https://coursera-course-photos.s3.amazonaws.com/4e/c1b71842848763186f164486340b59/logo_big.png");
a("Algorithms, Part I", "Princeton", ["Computer Science", "Algorithms"], "Coursera", ["Modules", "Interactive"], ["Programming"], "Yes", "An introduction to fundamental data types, algorithms, and data structures, with emphasis on applications and scientific performance analysis of Java implementations. Specific topics covered include: union-find algorithms; basic iterable data types (stack, queues, and bags); sorting algorithms (quicksort, mergesort, heapsort) and applications; priority queues; binary search trees; red-black trees; hash tables; and symbol-table applications.", "https://www.coursera.org/course/algs4partI", "https://s3.amazonaws.com/coursera/topics/algs4partI/large-icon.png");
a("Automata", "Stanford", ["Computer Science", "Theory"], "Coursera", ["Modules", "Interactive"], ["Java"], "Yes", "I am pleased to be able to offer free over the Internet a course on Automata Theory, based on the material I have taught periodically at Stanford in the course CS154. Students have access to screencast lecture videos, are given quiz questions, assignments and exams, receive regular feedback on progress, and can participate in a discussion forum. Those who successfully complete the course will receive a statement of accomplishment. You will need a decent Internet connection for accessing course materials, but should be able to watch the videos on your smartphone.", "https://www.coursera.org/course/automata", "https://s3.amazonaws.com/coursera/topics/automata/large-icon.png");
a("Securing Digital Democracy", "University of Michigan", ["Information", "Design", "computer science"], "Coursera", ["Modules", "Interactive"], [], "Yes", "Computer technology has transformed how we participate in democracy. The way we cast our votes, the way our votes are counted, and the way we choose who will lead are increasingly controlled by invisible computer software. Most U.S. states have adopted electronic voting, and countries around the world are starting to collect votes over the Internet. However, computerized voting raises startling security risks that are only beginning to be understood outside the research lab, from voting machine viruses that can silently change votes to the possibility that hackers in foreign countries could steal an election. This course will provide the technical background and public policy foundation that 21st century citizens need to understand the electronic voting debate.", "https://www.coursera.org/course/digitaldemocracy", "https://s3.amazonaws.com/coursera/topics/digitaldemocracy/large-icon.png");
a("Information Security and Risk Management in Context", "University of Washington", ["Information", "Design", "computer science"], "Coursera", ["Modules", "Interactive"], [], "Yes", "Explore the latest techniques for securing information and its systems, from policies and procedures to technologies and audit. Learn from leading experts who share proven practices in areas such as mobile workforce safety, security metrics, electronic evidence oversight and coping with e-crime and e-discovery. Study the protection of Cloud computing information. Discover how to foster the development of future information security leaders.", "https://www.coursera.org/course/inforiskman", "https://s3.amazonaws.com/coursera/topics/inforiskman/large-icon.png");
a("Compilers", "Stanford", ["Computer Science", "Programming"], "Coursera", ["Modules", "Interactive"], ["C#", "Java"], "Yes", "This course will discuss the major ideas used today in the implementation of programming language compilers, including lexical analysis, parsing, syntax-directed translation, abstract syntax trees, types and type checking, intermediate languages, dataflow analysis, program optimization, code generation, and runtime systems. As a result, you will learn how a program written in a high-level language designed for humans is systematically translated into a program written in low-level assembly more suited to machines. Along the way we will also touch on how programming languages are designed, programming language semantics, and why there are so many different kinds of programming languages.", "https://www.coursera.org/course/compilers", "https://s3.amazonaws.com/coursera/topics/compilers/large-icon.png");
a("Social Network Analysis", "Lada Adamic", ["Computer Science", "Network Analysis"], "Coursera", ["Modules", "Interactive"], [], "Yes", "Everything is connected: people, information, events and places, all the more so with the advent of online social media. A practical way of making sense of the tangle of connections is to analyze them as networks. In this course you will learn about the structure and evolution of networks, drawing on knowledge from disciplines as diverse as sociology, mathematics, computer science, economics, and physics. Online interactive demonstrations and hands-on analysis of real-world data sets will focus on a range of tasks: from identifying important nodes in the network, to detecting communities, to tracing information diffusion and opinion formation.", "https://www.coursera.org/course/sna", "https://s3.amazonaws.com/coursera/topics/sna/small-icon.hover.png");



